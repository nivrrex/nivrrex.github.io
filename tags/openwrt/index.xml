<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Openwrt on Nivrrex&#39;s blog</title>
    <link>http://nivrrex.github.io/tags/openwrt/</link>
    <description>Recent content in Openwrt on Nivrrex&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright right infomation.</copyright>
    <lastBuildDate>Tue, 05 Jun 2018 10:22:00 +0800</lastBuildDate>
    
	<atom:link href="http://nivrrex.github.io/tags/openwrt/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>use KoolProxy for adblock</title>
      <link>http://nivrrex.github.io/post/use-koolproxy-for-adblock/</link>
      <pubDate>Tue, 05 Jun 2018 10:22:00 +0800</pubDate>
      
      <guid>http://nivrrex.github.io/post/use-koolproxy-for-adblock/</guid>
      <description>KoolProxy 路由器上的广告过滤插件 ###介绍 KoolProxy 是一个免费的广告过滤软件，可以通过自己安装证书的方式支持https的广告过滤。看见后，想自己试用一下，用来过滤自己的机顶盒广告。
###安装 在官网http://firmware.koolshare.cn/binary/KoolProxy/ 根据自己路由器对应的版本，分别安装luci和koolproxy
安装luci 在 https://firmware.koolshare.cn/binary/KoolProxy/luci/ 按指导说明安装ipk ；注意要提前安装dnsmasq-full , ipset
opkg update opkg install openssl-util ipset dnsmasq-full diffutils iptables-mod-nat-extra opkg install wget ca-bundle ca-certificates libustream-openssl  opkg install --force-depends http://firmware.koolshare.cn/binary/KoolProxy/luci/luci-app-koolproxy_2.0-1_all.ipk opkg install --force-depends http://firmware.koolshare.cn/binary/KoolProxy/luci/luci-i18n-koolproxy-zh-cn_2.0-1_all.ipk  安装koolproxy主程序 我的路由器是netgear的wntr4300，所以就是 ar71xx 的 koolproxy_3.7.2-20180127_mips_24kc.ipk 这个ipk
opkg install --force-depends http://firmware.koolshare.cn/binary/KoolProxy/ar71xx/koolproxy_3.7.2-20180127_mips_24kc.ipk  如果没有对应的ipk，需要自己手动安装
mkdir /usr/share/koolproxy cd /usr/share/koolproxy wget https://koolproxy.com/downloads/XXX mv XXX koolproxy chmod 777 koolproxy mkdir data cd data mkdir rules cd rules wget https://kprule.</description>
    </item>
    
    <item>
      <title>fanqiang with chinadns</title>
      <link>http://nivrrex.github.io/post/fanqiang-with-chinadns/</link>
      <pubDate>Sun, 26 Jul 2015 12:54:59 +0800</pubDate>
      
      <guid>http://nivrrex.github.io/post/fanqiang-with-chinadns/</guid>
      <description>来由 用Opera等浏览器时，由于DNS被GFW污染了，所以fanqiang的有些不爽快，像Twitter.com和Facebook.com无法上，虽然IE等借助Shadowsocks可以直接上？所以想在OpenWRT上，把DNS污染问题彻底解决了。
Old解决方案 - FreeRouterV2 以前的解决方案是借用FreeRouterV2的部分iptables策略，针对被GFW污染的数据包进行丢弃，然后获得正常的数据包，具体原理作者详细的写了PDF文件进行说明，如下
安装 首先需要在OpenWRT上安装如下包：
opkg update opkg install iptables-mod-filter iptables-mod-u32 kmod-ipt-filter kmod-ipt-u32  配置 然后配置iptables的防火墙策略
vi /etc/firewall.user  添加如下命令
iptables -t mangle -I PREROUTING -p udp --sport 53 -m u32 --u32 &amp;quot;0&amp;amp;0x0F000000=0x05000000 &amp;amp;&amp;amp; 0&amp;gt;&amp;gt;22&amp;amp;0x3C@8&amp;amp;0x810F=0x8000 &amp;amp;&amp;amp; 0&amp;gt;&amp;gt;22&amp;amp;0x3C@12&amp;amp;0xFFFF=0x0000&amp;quot; -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|042442B2|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|0807C62D|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|1759053C|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|253D369E|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|2E52AE44|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|31027B38|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|364C8701|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|3B1803AD|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|402158A1|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|4021632F|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|4042A3FB|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|4168CAFC|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|41A0DB71|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|422DFCED|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|480ECD63|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|480ECD68|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|4A7D2766|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|4A7D2771|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|4A7D7F66|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|4A7D9B66|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|4D04075C|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|4E10310F|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|5D2E0859|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|76053106|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|80797E8B|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|9F6A794B|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|A9840D67|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|BC050460|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|BDA31105|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|C043C606|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|C504040C|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|CA6A0102|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|CAB50755|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|CB620741|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|CBA1E6AB|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|CF0C5862|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|D0381F2B|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|D1244921|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|D155E58A|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|D1913632|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|D1DC1EAE|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|D35E4293|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|D5A9FB23|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|D8DDBCB6|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|D8EAB30D|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|F3B9BB27|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|F9812E30|&amp;quot; --from 60 --to 180 -j DROP iptables -t mangle -I PREROUTING -p udp --sport 53 -m string --algo bm --hex-string &amp;quot;|FD9D0EA5|&amp;quot; --from 60 --to 180 -j DROP  重启防火墙即可</description>
    </item>
    
    <item>
      <title>build openwrt with image builder</title>
      <link>http://nivrrex.github.io/post/build-openwrt-with-image-builder/</link>
      <pubDate>Thu, 17 Jul 2014 22:17:11 +0800</pubDate>
      
      <guid>http://nivrrex.github.io/post/build-openwrt-with-image-builder/</guid>
      <description>来由 这几天在折腾OpenWrt，前文fanqiang with openwrt+vps里说过， 我用的是PandoraBox最新编译的版本，但是其内置的packages里面很多软件没有编译，如Python等。而直接换用官方的packages，会提示兼容性问题，无法直接使用。 从网络Google了一下，可以两个同时使用。 src/gz attitude_adjustment http://downloads.openwrt.org/attitude_adjustment/12.09/ramips/rt305x/packages src/gz pandorabox http://downloads.openwrt.org.cn/PandoraBox/ralink/rt305x/packages dest root / dest ram /tmp lists_dir ext /var/opkg-lists option overlay_root /overlay arch all 100 arch ralink 200 arch ramips 300 arch ramips_24kec 400  这样就解决了软件兼容性的问题，但是前文fanqiang with openwrt+vps里面提到的&amp;rdquo;input/output error&amp;rdquo;问题仍然没有解决。遂升起了自己编译的念头。
源代码编译 要从源代码编译OpenWrt，需要有Linux环境，主要好像是因为Windows下大小写不区分，可能导致异常问题。 于是选了Debian系统，主要是玩OpenWrt时，又淘了一个树莓派（Raspberry Pi）玩，而它的默认系统就是基于Debian，同时最早玩的Ubuntu也是基于Debian的，买的VPS也是基于Debian系统的，so&amp;hellip; 于是到达官网选择i386架构、xfce界面的debian-7.6.0-i386-xfce-CD-1.iso。 通过UltraISO写入到U盘，然后安装到硬盘上，OK。
编译源代码 这个痛苦的过程不想说了 主要是下载Debian上的编译支撑工具，然后通过以下说明进行编译
 OpenWrt Buildroot - 安装 OpenWrt Buildroot - 使用说明 最终结果是，我从下午编译到晚上，还没有编译完成，于是让其继续。第二天起来后，发现网络断了，编译失败。  Image Builder编译 从头开始的自行编译实在hold不住，于是就考虑其它方式，由于OpenWrt的编译选项中，可以将结果进行打包给其它人使用，官网上也有相应的打包的tar.gz2文件可以下载，也就是Image Builder的形式。考虑用它实现，说明如下：
*Image Generator (Image Builder) 下载、解压缩，然后看需要的包，我是将PandoraBox里面所有的包都包含了，然后加上了Python、DNS工具包等。 命令如下：</description>
    </item>
    
    <item>
      <title>fanqiang with openwrt&#43;vps</title>
      <link>http://nivrrex.github.io/post/fanqiang-with-openwrt&#43;vps/</link>
      <pubDate>Tue, 08 Jul 2014 21:27:40 +0800</pubDate>
      
      <guid>http://nivrrex.github.io/post/fanqiang-with-openwrt&#43;vps/</guid>
      <description>来由 在上一篇《fanqiang with vpn+chnroutes》中，通过免费的vpn和chnroutes，已经可以成功的翻墙了，后来觉得免费VPN不稳定，又买了一个月的付费vpn；再后来，觉得付费vpn不是共享，服务器上的多了，就又要换服务器，不爽；于是就决定，找个国外的vps主机，自己独享fq带宽！ 找合适的VPS 由于一个人用，不需要太好的，稳定，延时一般就OK，最好比较实惠。 开始时选择了年付$3.99的搬瓦工bandwagonhost（太便宜了啊），但是ping包时，发现丢包不是一般的多，遂放弃 又找到了RamNode，有个年付$12的套餐，而且，然后用5.8折的优惠码，一年不到100￥，还是可以接受的，遂成交。 它最大的好处就是，丢包低于1%，而且有西雅图这种西海岸的机房，对于大陆来说，延时200ms左右，感觉还不错。 由于RamNode只支持PayPal，所以最终也了解了PayPal支持信用卡或者62开头的银联卡（开通网上银行），即可以支付了~
使用VPS架设VPN 这个就不赘述了，网上一搜一大堆，我选择的操作系统是Debian：
 乔大海的《BuyVM OpenVZ VPS Debian安装PPTP VPN》 郭高兴的《VPS上安装PPTP（Xen+OpenVZ）完整教程》 howtogeek的《How to Setup a VPN (PPTP) Server on Debian Linux》 波斯马的《Linux（VPS+Debian）搭建配置VPN（PPTP）服务》 在设置完VPN后，要注意MTU值的问题，否则部分网页打开的很慢或有问题：
 永远的UNIX的《Fedora core 2下建立Poptop服务器以及常见问题》
  路由器+VPN 淘OpenWrt路由器 可以独享VPN上网后，还是不满足啊，因为家里2台电脑，手机还想无线上网，一台一台指定好费事啊 上一篇《fanqiang with vpn+chnroutes》，最后提到，可以用开源的路由器固件，搞定路由器上VPN的问题。 Google了很长时间，锁定了OpenWrt，路由器选择淘宝上别人刷好的Huawei HG255d，基本在￥40-￥60之间。CPU为Ralink RT3052，FLASH容量为16MB，内存容量为32MB DDR。我淘的是硬改内存64MB+散热片，刷了不死uboot的，毕竟没那么多精力折腾。
刷新最新OpenWrt固件 买回来后，淘宝店主刷新的是比较老的OpenWrt-DreamBox 20120828版本，对应的OpenWrt-DreamBox的源软件包地址已经改变，没法下载新软件，就开始折腾，找了半天，由于DreamBox版本比较老，所以换成了比较新的PandoraBox版本，可以到http://downloads.openwrt.org.cn/PandoraBox/HuaWei_HG255D/ 下载编译的最新固件，我选择的是最新的20140505版。 不得不说，有了uboot，可以一键刷机，还是比较放心的进行折腾的。在找到目前的固件前，刷新了不少版本，但都没啥问题。
设置路由器+VPN+chnroutes静态路由 这个根据各人情况都不相同，总而言之，最终搞定。
存在问题 一个是VPN拨号后，需要手动添加一下静态路由，不过是自己的VPS架设的VPN，想待多久就待多久，除了掉线，一般也不会下线滴。 另一个是，可能淘的Huawei HG255d有问题，路由器在对文件进行操作时，折腾一段时间后，会出现&amp;rdquo;input/output error&amp;rdquo;问题，怀疑是硬改导致的？ 解决方案就是路由器关电重启解决，不过除了装软件，折腾东东，一般不影响使用，所以也不准备找淘宝店主问这个问题了。
总之，可以开始开心快乐的自由、随意的访问Internet了，so happy~</description>
    </item>
    
  </channel>
</rss>